cmake_minimum_required(VERSION 3.14)
project(utilbox)

set(CMAKE_CXX_STANDARD 17)
if(WIN32)
add_compile_options(/utf-8)
endif()
option(ReleaseWithDebug "Release下带调试信息",OFF)
if(ReleaseWithDebug)
    if(WIN32)
        set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Zi -Od -Ob0")
        set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG /OPT:NOREF /OPT:NOICF")
        set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /DEBUG /OPT:NOREF /OPT:NOICF")
    elseif(UNIX)
        add_definitions(-DAF_CLASSARRANGE_EXPORTS)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wl,-Bsymbolic")
        set(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -g -O0 -Wall")
        add_compile_options(-Wall -Wextra -Wpedantic -fPIC -fvisibility=hidden)
        add_definitions(-D_GLIBCXX_USE_CXX11_ABI=0)
    endif()
    message("Release下带调试信息")
endif()
#设置输出路径
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/bin)

INCLUDE(GenerateExportHeader)

list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/install/)
include(install)
add_subdirectory(src)
